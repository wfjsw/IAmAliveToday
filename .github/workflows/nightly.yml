on: [push, pull_request]
name: Build nightly
jobs:
  nightly:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout 
        uses: actions/checkout@master
      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with: 
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Use Cache
        uses: Swatinem/rust-cache@v1.3.0
        with:
          key: v1
      - name: Install Cargo Vcpkg
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions-rs/cargo@v1
        with: 
          command: install
          args: cargo-vcpkg
      - name: Cache vcpkg downloads
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/cache@v2
        with:
          path: |
            ~/AppData/Local/vcpkg/archives
          key: ${{ matrix.target }}-${{ hashFiles('Cargo.lock') }}-vcpkg
      - name: Install OpenSSL
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions-rs/cargo@v1
        with: 
          command: vcpkg
          args: build
      - name: Build
        uses: actions-rs/cargo@v1
        env: 
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          VCPKGRS_DYNAMIC: 1
        with: 
          command: build
          args: --release --locked --features "telemetry"
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}
          path: |
            target/release/i_am_alive_today
            target/release/i_am_alive_today.exe
            target/vcpkg/installed/x64-windows/bin/*.dll
      
